//------------------------------------------------------------------------
// @SMTG_SOURCE_COPYRIGHT_HEADER@
//------------------------------------------------------------------------

#include "public.sdk/source/vst/aaxwrapper/aaxwrapper_description.h"

#include "@SMTG_PREFIX_FOR_FILENAMES@cids.h"
#include "pluginterfaces/base/futils.h"

//------------------------------------------------------------------------
#if 0 // for additional outputs
AAX_Aux_Desc effAux_stereo[] = 
{
	// name, channel count
	{ "@SMTG_PLUGIN_CLASS_NAME@ AUX2",  2 }, 
	{ nullptr }
};
#endif

//------------------------------------------------------------------------
#if 1 // MIDI inputs for instruments or Fx with MIDI input
AAX_MIDI_Desc effMIDI[] = 
{
	// port name, channel mask
	{ "@SMTG_PLUGIN_CLASS_NAME@", 0xffff }, 
	{ nullptr }
};
#endif

//------------------------------------------------------------------------
// Input/Output meters
AAX_Meter_Desc effMeters[] = 
{
	// { "Input", CCONST ('A', 'B', 'C', 'D'),  0 /*AAX_eMeterOrientation_Default*/, 0 /*AAX_eMeterType_Input*/ },
	// { "Output", CCONST ('A', 'B', 'C', 'D'), 0 /*AAX_eMeterOrientation_Default*/, 1 /*AAX_eMeterType_Output*/ },
	{ nullptr }
};

//------------------------------------------------------------------------
AAX_Plugin_Desc effPlugins[] = {
	// effect-ID, name,	
	// Native ID, AudioSuite ID,
	// InChannels, OutChannels, InSideChain channels,
	// MIDI, Aux,
	// Meters
	// Latency
	// note: IDs must be unique across plugins

	// Mono variant
	{"@SMTG_PLUGIN_IDENTIFIER@.mono",
	 "@SMTG_PLUGIN_BUNDLE_NAME@", 
	 CCONST ('A', 'B', 'C', '1'),
	 CCONST ('A', 'B', 'C', '1'),
	 1, /*mInputChannels*/
	 1, /*mOutputChannels*/
	 0, /*mSideChainInputChannels*/
	 nullptr, /*effMIDI*/
	 nullptr, /*effAux*/
	 nullptr, /*effMeters*/
	 0 /*Latency*/ 
	},

	// Stereo variant
	{"@SMTG_PLUGIN_IDENTIFIER@.stereo",
	 "@SMTG_PLUGIN_BUNDLE_NAME@", 
	 CCONST ('A', 'B', 'C', '2'),
	 CCONST ('A', 'B', 'C', '2'), 
	 2, /*mInputChannels*/
	 2, /*mOutputChannels*/
	 0, /*mSideChainInputChannels*/
	 nullptr, /*effMIDI*/
	 nullptr, /*effAux*/
	 nullptr, /*effMeters*/
	 0 /*Latency*/
	},

	{nullptr}
};

//------------------------------------------------------------------------
AAX_Effect_Desc effDesc = {
	"@SMTG_VENDOR_NAME@",	// manufacturer
	"@SMTG_PLUGIN_CLASS_NAME@",		// product
	CCONST ('S', 'M', 'T', 'G'), // manufacturer ID
	CCONST ('A', 'G', 'S', 'B'), // product ID
	@SMTG_PLUGIN_CLASS_NAME@VST3Category, // VST category (define @SMTG_PLUGIN_CLASS_NAME@cids.h)
	{0},			// VST3 class ID (set later)
	1,				// version
	nullptr,		// no pagetable file "@SMTG_PLUGIN_CLASS_NAME@.xml",
	effPlugins,
};

//------------------------------------------------------------------------
// this drag's in all the craft from the AAX library
int* forceLinkAAXWrapper = &AAXWrapper_linkAnchor;

//------------------------------------------------------------------------
AAX_Effect_Desc* AAXWrapper_GetDescription ()
{
	// cannot initialize in global descriptor, and it might be link order dependent
	memcpy (effDesc.mVST3PluginID, (const char*)@SMTG_VENDOR_NAMESPACE@::k@SMTG_PLUGIN_CLASS_NAME@ProcessorUID,
	        sizeof (effDesc.mVST3PluginID));
	return &effDesc;
}
